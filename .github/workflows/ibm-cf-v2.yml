#
# https://github.com/P3TERX/IBM-CF-V2
#
# Copyright (c) 2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: IBM Cloud Foundry - Xtls

env:
  IBM_CF_API: https://api.us-south.cf.cloud.ibm.com
  IBM_CF_APP_MEM: 256M

on:
  workflow_dispatch:
  repository_dispatch:
#  schedule:
#    - cron: 0 21 * * 5

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      IBM_CF_USERNAME: ${{ secrets.IBM_CF_USERNAME }}
      IBM_CF_PASSWORD: ${{ secrets.IBM_CF_PASSWORD }}
      IBM_CF_ORG_NAME: ${{ secrets.IBM_CF_ORG_NAME }}
      IBM_CF_SPACE_NAME: ${{ secrets.IBM_CF_SPACE_NAME }}
      IBM_CF_APP_NAME: ${{ secrets.IBM_CF_APP_NAME }}
      V2_UUID: ${{ secrets.V2_UUID }}
      V2_WS_PATH_VMESS: ${{ secrets.V2_WS_PATH_VMESS }}
      V2_WS_PATH_VLESS: ${{ secrets.V2_WS_PATH_VLESS }}

    steps:

    - name: Install Cloud Foundry CLI
      run: |
        curl -fsSL "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=v7&source=github" | tar -zxC /tmp
        sudo install -m 755 /tmp/cf7 /usr/local/bin/cf
        cf version

    - name: Login to IBM Cloud Foundry
      run: |
        cf login \
          -a "${IBM_CF_API}" \
          -u "${IBM_CF_USERNAME}" \
          -p "${IBM_CF_PASSWORD}" \
          -o "${IBM_CF_ORG_NAME:-$IBM_CF_USERNAME}" \
          -s "${IBM_CF_SPACE_NAME:-dev}"

    - name: Download Latest V2Ray
      run: |
        DOWNLOAD_URL="https://github.com/XTLS/Xray-core/releases/latest/download/Xray-linux-64.zip"
        curl -fsSL "$DOWNLOAD_URL" -o "latest-v2ray.zip"
        unzip latest-v2ray.zip xray geoip.dat geosite.dat
        rm latest-v2ray.zip
        chmod -v 755 xray
        ./xray -version
        mv xray ${IBM_CF_APP_NAME}

   
    - name: Generate V2Ray Config File (VLESS)
     # if: ${{ env.V2_WS_PATH_VLESS }}
      run: |
        base64 << P3TERX > config
         {
    "log": {
        "access": "none",
        "loglevel": "error"
    },
    "inbounds": [
        {
            "port": 443,
            "protocol": "vless",
            "settings": {
                "clients": [
                    {
                        "id": "${V2_UUID}", // 填写你的 UUID
                        "flow": "xtls-rprx-direct",
                        "level": 0,
                        "email": "love@example.com"
                    }
                ],
                "decryption": "none",
                "fallbacks": [
                    {
                        "dest": 1310, // 默认回落到 Xray 的 Trojan 协议
                        "xver": 1
                    },
                    {
                        "path": "websocket1", // 必须换成自定义的 PATH
                        "dest": 1234,
                        "xver": 1
                    },
                    {
                        "path": "vmesstcp1", // 必须换成自定义的 PATH
                        "dest": 2345,
                        "xver": 1
                    },
                    {
                        "path": "vmessws1", // 必须换成自定义的 PATH
                        "dest": 3456,
                        "xver": 1
                    }
                ]
            },
            "streamSettings": {
                "network": "tcp",
                "security": "xtls",
                "xtlsSettings": {
                    "alpn": [
                        "http/1.1"
                    ],
                    "certificates": [
                        
                    ]
                }
            }
        },
        {
            "port": 1310,
            "listen": "127.0.0.1",
            "protocol": "trojan",
            "settings": {
                "clients": [
                    {
                        "password": "nsjb1zgjsb", // 填写你的密码
                        "level": 0,
                        "email": "love@example.com"
                    }
                ],
                "fallbacks": [
                    {
                        "dest": 80 // 或者回落到其它也防探测的代理
                    }
                ]
            },
            "streamSettings": {
                "network": "tcp",
                "security": "none",
                "tcpSettings": {
                    "acceptProxyProtocol": true
                }
            }
        },
        {
            "port": 1234,
            "listen": "127.0.0.1",
            "protocol": "vless",
            "settings": {
                "clients": [
                    {
                        "id": "${V2_UUID}", // 填写你的 UUID
                        "level": 0,
                        "email": "love@example.com"
                    }
                ],
                "decryption": "none"
            },
            "streamSettings": {
                "network": "ws",
                "security": "none",
                "wsSettings": {
          #          "acceptProxyProtocol": true, // 提醒：若你用 Nginx/Caddy 等反代 WS，需要删掉这行
                    "path": "websocket1" // 必须换成自定义的 PATH，需要和分流的一致
                }
            }
        },
        {
            "port": 2345,
            "listen": "127.0.0.1",
            "protocol": "vmess",
            "settings": {
                "clients": [
                    {
                        "id": "${V2_UUID}", // 填写你的 UUID
                        "level": 0,
                        "email": "love@example.com"
                    }
                ]
            },
            "streamSettings": {
                "network": "tcp",
                "security": "none",
                "tcpSettings": {
                    "acceptProxyProtocol": true,
                    "header": {
                        "type": "http",
                        "request": {
                            "path": [
                                "vmesstcp1" // 必须换成自定义的 PATH，需要和分流的一致
                            ]
                        }
                    }
                }
            }
        },
        {
            "port": 3456,
            "listen": "127.0.0.1",
            "protocol": "vmess",
            "settings": {
                "clients": [
                    {
                        "id": "${V2_UUID}", // 填写你的 UUID
                        "level": 0,
                        "email": "love@example.com"
                    }
                ]
            },
            "streamSettings": {
                "network": "ws",
                "security": "none",
                "wsSettings": {
            #        "acceptProxyProtocol": true, // 提醒：若你用 Nginx/Caddy 等反代 WS，需要删掉这行
                    "path": "vmessws1" // 必须换成自定义的 PATH，需要和分流的一致
                }
            }
        }
    ],
    "outbounds": [
        {
            "protocol": "freedom"
        }
    ]
}
        P3TERX

    - name: Generate Manifest File
      run: |
        cat << P3TERX > manifest.yml
        applications:
        - name: ${IBM_CF_APP_NAME}
          memory: ${IBM_CF_APP_MEM}
          random-route: true
          command: base64 -d config > config.json; ./${IBM_CF_APP_NAME} -config=config.json
          buildpacks:
          - binary_buildpack
        P3TERX

    - name: Deploy Cloud Foundry App
      run: cf push


